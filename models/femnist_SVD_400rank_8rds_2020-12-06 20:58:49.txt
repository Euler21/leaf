[2m[36m(pid=534)[0m 
[2m[36m(pid=534)[0m =========================Options=============================
[2m[36m(pid=534)[0m -max_depth                  10000
[2m[36m(pid=534)[0m -min_bytes                  0
[2m[36m(pid=534)[0m -min_peak_bytes             0
[2m[36m(pid=534)[0m -min_residual_bytes         0
[2m[36m(pid=534)[0m -min_output_bytes           0
[2m[36m(pid=534)[0m -min_micros                 0
[2m[36m(pid=534)[0m -min_accelerator_micros     0
[2m[36m(pid=534)[0m -min_cpu_micros             0
[2m[36m(pid=534)[0m -min_params                 0
[2m[36m(pid=534)[0m -min_float_ops              1
[2m[36m(pid=534)[0m -min_occurrence             0
[2m[36m(pid=534)[0m -step                       -1
[2m[36m(pid=534)[0m -order_by                   float_ops
[2m[36m(pid=534)[0m -account_type_regexes       .*
[2m[36m(pid=534)[0m -start_name_regexes         .*
[2m[36m(pid=534)[0m -trim_name_regexes          
[2m[36m(pid=534)[0m -show_name_regexes          .*
[2m[36m(pid=534)[0m -hide_name_regexes          
[2m[36m(pid=534)[0m -account_displayed_op_only  true
[2m[36m(pid=534)[0m -select                     float_ops
[2m[36m(pid=534)[0m -output                     stdout:
[2m[36m(pid=534)[0m 
[2m[36m(pid=534)[0m ==================Model Analysis Report======================
[2m[36m(pid=534)[0m 
[2m[36m(pid=534)[0m Doc:
[2m[36m(pid=534)[0m scope: The nodes in the model graph are organized by their names, which is hierarchical like filesystem.
[2m[36m(pid=534)[0m flops: Number of float operations. Note: Please read the implementation for the math behind it.
[2m[36m(pid=534)[0m 
[2m[36m(pid=534)[0m Profile:
[2m[36m(pid=534)[0m node name | # float_ops
[2m[36m(pid=534)[0m _TFProfRoot (--/13.20m flops)
[2m[36m(pid=534)[0m   dense/kernel/Initializer/random_uniform (6.42m/12.85m flops)
[2m[36m(pid=534)[0m     dense/kernel/Initializer/random_uniform/mul (6.42m/6.42m flops)
[2m[36m(pid=534)[0m     dense/kernel/Initializer/random_uniform/sub (1/1 flops)
[2m[36m(pid=534)[0m   dense_1/kernel/Initializer/random_uniform (126.98k/253.95k flops)
[2m[36m(pid=534)[0m     dense_1/kernel/Initializer/random_uniform/mul (126.98k/126.98k flops)
[2m[36m(pid=534)[0m     dense_1/kernel/Initializer/random_uniform/sub (1/1 flops)
[2m[36m(pid=534)[0m   conv2d_1/kernel/Initializer/random_uniform (51.20k/102.40k flops)
[2m[36m(pid=534)[0m     conv2d_1/kernel/Initializer/random_uniform/mul (51.20k/51.20k flops)
[2m[36m(pid=534)[0m     conv2d_1/kernel/Initializer/random_uniform/sub (1/1 flops)
[2m[36m(pid=534)[0m   conv2d/kernel/Initializer/random_uniform (800/1.60k flops)
[2m[36m(pid=534)[0m     conv2d/kernel/Initializer/random_uniform/mul (800/800 flops)
[2m[36m(pid=534)[0m     conv2d/kernel/Initializer/random_uniform/sub (1/1 flops)
[2m[36m(pid=534)[0m   gradients/sparse_softmax_cross_entropy_loss/value_grad/Neg (1/1 flops)
[2m[36m(pid=534)[0m   gradients/sparse_softmax_cross_entropy_loss/value_grad/mul (1/1 flops)
[2m[36m(pid=534)[0m   sparse_softmax_cross_entropy_loss/num_present/Equal (1/1 flops)
[2m[36m(pid=534)[0m 
[2m[36m(pid=534)[0m ======================End of Report==========================
[2m[36m(pid=562)[0m 
[2m[36m(pid=562)[0m =========================Options=============================
[2m[36m(pid=562)[0m -max_depth                  10000
[2m[36m(pid=562)[0m -min_bytes                  0
[2m[36m(pid=562)[0m -min_peak_bytes             0
[2m[36m(pid=562)[0m -min_residual_bytes         0
[2m[36m(pid=562)[0m -min_output_bytes           0
[2m[36m(pid=562)[0m -min_micros                 0
[2m[36m(pid=562)[0m -min_accelerator_micros     0
[2m[36m(pid=562)[0m -min_cpu_micros             0
[2m[36m(pid=562)[0m -min_params                 0
[2m[36m(pid=562)[0m -min_float_ops              1
[2m[36m(pid=562)[0m -min_occurrence             0
[2m[36m(pid=562)[0m -step                       -1
[2m[36m(pid=562)[0m -order_by                   float_ops
[2m[36m(pid=562)[0m -account_type_regexes       .*
[2m[36m(pid=562)[0m -start_name_regexes         .*
[2m[36m(pid=562)[0m -trim_name_regexes          
[2m[36m(pid=562)[0m -show_name_regexes          .*
[2m[36m(pid=562)[0m -hide_name_regexes          
[2m[36m(pid=562)[0m -account_displayed_op_only  true
[2m[36m(pid=562)[0m -select                     float_ops
[2m[36m(pid=562)[0m -output                     stdout:
[2m[36m(pid=562)[0m 
[2m[36m(pid=562)[0m ==================Model Analysis Report======================
[2m[36m(pid=562)[0m 
[2m[36m(pid=562)[0m Doc:
[2m[36m(pid=562)[0m scope: The nodes in the model graph are organized by their names, which is hierarchical like filesystem.
[2m[36m(pid=562)[0m flops: Number of float operations. Note: Please read the implementation for the math behind it.
[2m[36m(pid=562)[0m 
[2m[36m(pid=562)[0m Profile:
[2m[36m(pid=562)[0m node name | # float_ops
[2m[36m(pid=562)[0m _TFProfRoot (--/13.20m flops)
[2m[36m(pid=562)[0m   dense/kernel/Initializer/random_uniform (6.42m/12.85m flops)
[2m[36m(pid=562)[0m     dense/kernel/Initializer/random_uniform/mul (6.42m/6.42m flops)
[2m[36m(pid=562)[0m     dense/kernel/Initializer/random_uniform/sub (1/1 flops)
[2m[36m(pid=562)[0m   dense_1/kernel/Initializer/random_uniform (126.98k/253.95k flops)
[2m[36m(pid=562)[0m     dense_1/kernel/Initializer/random_uniform/mul (126.98k/126.98k flops)
[2m[36m(pid=562)[0m     dense_1/kernel/Initializer/random_uniform/sub (1/1 flops)
[2m[36m(pid=562)[0m   conv2d_1/kernel/Initializer/random_uniform (51.20k/102.40k flops)
[2m[36m(pid=562)[0m     conv2d_1/kernel/Initializer/random_uniform/mul (51.20k/51.20k flops)
[2m[36m(pid=562)[0m     conv2d_1/kernel/Initializer/random_uniform/sub (1/1 flops)
[2m[36m(pid=562)[0m   conv2d/kernel/Initializer/random_uniform (800/1.60k flops)
[2m[36m(pid=562)[0m     conv2d/kernel/Initializer/random_uniform/mul (800/800 flops)
[2m[36m(pid=562)[0m     conv2d/kernel/Initializer/random_uniform/sub (1/1 flops)
[2m[36m(pid=562)[0m   gradients/sparse_softmax_cross_entropy_loss/value_grad/Neg (1/1 flops)
[2m[36m(pid=562)[0m   gradients/sparse_softmax_cross_entropy_loss/value_grad/mul (1/1 flops)
[2m[36m(pid=562)[0m   sparse_softmax_cross_entropy_loss/num_present/Equal (1/1 flops)
[2m[36m(pid=562)[0m 
[2m[36m(pid=562)[0m ======================End of Report==========================
[2m[36m(pid=554)[0m 
[2m[36m(pid=554)[0m =========================Options=============================
[2m[36m(pid=554)[0m -max_depth                  10000
[2m[36m(pid=554)[0m -min_bytes                  0
[2m[36m(pid=554)[0m -min_peak_bytes             0
[2m[36m(pid=554)[0m -min_residual_bytes         0
[2m[36m(pid=554)[0m -min_output_bytes           0
[2m[36m(pid=554)[0m -min_micros                 0
[2m[36m(pid=554)[0m -min_accelerator_micros     0
[2m[36m(pid=554)[0m -min_cpu_micros             0
[2m[36m(pid=554)[0m -min_params                 0
[2m[36m(pid=554)[0m -min_float_ops              1
[2m[36m(pid=554)[0m -min_occurrence             0
[2m[36m(pid=554)[0m -step                       -1
[2m[36m(pid=554)[0m -order_by                   float_ops
[2m[36m(pid=554)[0m -account_type_regexes       .*
[2m[36m(pid=554)[0m -start_name_regexes         .*
[2m[36m(pid=554)[0m -trim_name_regexes          
[2m[36m(pid=554)[0m -show_name_regexes          .*
[2m[36m(pid=554)[0m -hide_name_regexes          
[2m[36m(pid=554)[0m -account_displayed_op_only  true
[2m[36m(pid=554)[0m -select                     float_ops
[2m[36m(pid=554)[0m -output                     stdout:
[2m[36m(pid=554)[0m 
[2m[36m(pid=554)[0m ==================Model Analysis Report======================
[2m[36m(pid=554)[0m 
[2m[36m(pid=554)[0m Doc:
[2m[36m(pid=554)[0m scope: The nodes in the model graph are organized by their names, which is hierarchical like filesystem.
[2m[36m(pid=554)[0m flops: Number of float operations. Note: Please read the implementation for the math behind it.
[2m[36m(pid=554)[0m 
[2m[36m(pid=554)[0m Profile:
[2m[36m(pid=554)[0m node name | # float_ops
[2m[36m(pid=554)[0m _TFProfRoot (--/13.20m flops)
[2m[36m(pid=554)[0m   dense/kernel/Initializer/random_uniform (6.42m/12.85m flops)
[2m[36m(pid=554)[0m     dense/kernel/Initializer/random_uniform/mul (6.42m/6.42m flops)
[2m[36m(pid=554)[0m     dense/kernel/Initializer/random_uniform/sub (1/1 flops)
[2m[36m(pid=554)[0m   dense_1/kernel/Initializer/random_uniform (126.98k/253.95k flops)
[2m[36m(pid=554)[0m     dense_1/kernel/Initializer/random_uniform/mul (126.98k/126.98k flops)
[2m[36m(pid=554)[0m     dense_1/kernel/Initializer/random_uniform/sub (1/1 flops)
[2m[36m(pid=554)[0m   conv2d_1/kernel/Initializer/random_uniform (51.20k/102.40k flops)
[2m[36m(pid=554)[0m     conv2d_1/kernel/Initializer/random_uniform/mul (51.20k/51.20k flops)
[2m[36m(pid=554)[0m     conv2d_1/kernel/Initializer/random_uniform/sub (1/1 flops)
[2m[36m(pid=554)[0m   conv2d/kernel/Initializer/random_uniform (800/1.60k flops)
[2m[36m(pid=554)[0m     conv2d/kernel/Initializer/random_uniform/mul (800/800 flops)
[2m[36m(pid=554)[0m     conv2d/kernel/Initializer/random_uniform/sub (1/1 flops)
[2m[36m(pid=554)[0m   gradients/sparse_softmax_cross_entropy_loss/value_grad/Neg (1/1 flops)
[2m[36m(pid=554)[0m   gradients/sparse_softmax_cross_entropy_loss/value_grad/mul (1/1 flops)
[2m[36m(pid=554)[0m   sparse_softmax_cross_entropy_loss/num_present/Equal (1/1 flops)
[2m[36m(pid=554)[0m 
[2m[36m(pid=554)[0m ======================End of Report==========================
Clients in Total: 194
--- Random Initialization ---
[2m[36m(pid=559)[0m 
[2m[36m(pid=559)[0m =========================Options=============================
[2m[36m(pid=559)[0m -max_depth                  10000
[2m[36m(pid=559)[0m -min_bytes                  0
[2m[36m(pid=559)[0m -min_peak_bytes             0
[2m[36m(pid=559)[0m -min_residual_bytes         0
[2m[36m(pid=559)[0m -min_output_bytes           0
[2m[36m(pid=559)[0m -min_micros                 0
[2m[36m(pid=559)[0m -min_accelerator_micros     0
[2m[36m(pid=559)[0m -min_cpu_micros             0
[2m[36m(pid=559)[0m -min_params                 0
[2m[36m(pid=559)[0m -min_float_ops              1
[2m[36m(pid=559)[0m -min_occurrence             0
[2m[36m(pid=559)[0m -step                       -1
[2m[36m(pid=559)[0m -order_by                   float_ops
[2m[36m(pid=559)[0m -account_type_regexes       .*
[2m[36m(pid=559)[0m -start_name_regexes         .*
[2m[36m(pid=559)[0m -trim_name_regexes          
[2m[36m(pid=559)[0m -show_name_regexes          .*
[2m[36m(pid=559)[0m -hide_name_regexes          
[2m[36m(pid=559)[0m -account_displayed_op_only  true
[2m[36m(pid=559)[0m -select                     float_ops
[2m[36m(pid=559)[0m -output                     stdout:
[2m[36m(pid=559)[0m 
[2m[36m(pid=559)[0m ==================Model Analysis Report======================
[2m[36m(pid=559)[0m 
[2m[36m(pid=559)[0m Doc:
[2m[36m(pid=559)[0m scope: The nodes in the model graph are organized by their names, which is hierarchical like filesystem.
[2m[36m(pid=559)[0m flops: Number of float operations. Note: Please read the implementation for the math behind it.
[2m[36m(pid=559)[0m 
[2m[36m(pid=559)[0m Profile:
[2m[36m(pid=559)[0m node name | # float_ops
[2m[36m(pid=559)[0m _TFProfRoot (--/13.20m flops)
[2m[36m(pid=559)[0m   dense/kernel/Initializer/random_uniform (6.42m/12.85m flops)
[2m[36m(pid=559)[0m     dense/kernel/Initializer/random_uniform/mul (6.42m/6.42m flops)
[2m[36m(pid=559)[0m     dense/kernel/Initializer/random_uniform/sub (1/1 flops)
[2m[36m(pid=559)[0m   dense_1/kernel/Initializer/random_uniform (126.98k/253.95k flops)
[2m[36m(pid=559)[0m     dense_1/kernel/Initializer/random_uniform/mul (126.98k/126.98k flops)
[2m[36m(pid=559)[0m     dense_1/kernel/Initializer/random_uniform/sub (1/1 flops)
[2m[36m(pid=559)[0m   conv2d_1/kernel/Initializer/random_uniform (51.20k/102.40k flops)
[2m[36m(pid=559)[0m     conv2d_1/kernel/Initializer/random_uniform/mul (51.20k/51.20k flops)
[2m[36m(pid=559)[0m     conv2d_1/kernel/Initializer/random_uniform/sub (1/1 flops)
[2m[36m(pid=559)[0m   conv2d/kernel/Initializer/random_uniform (800/1.60k flops)
[2m[36m(pid=559)[0m     conv2d/kernel/Initializer/random_uniform/mul (800/800 flops)
[2m[36m(pid=559)[0m     conv2d/kernel/Initializer/random_uniform/sub (1/1 flops)
[2m[36m(pid=559)[0m   gradients/sparse_softmax_cross_entropy_loss/value_grad/Neg (1/1 flops)
[2m[36m(pid=559)[0m   gradients/sparse_softmax_cross_entropy_loss/value_grad/mul (1/1 flops)
[2m[36m(pid=559)[0m   sparse_softmax_cross_entropy_loss/num_present/Equal (1/1 flops)
[2m[36m(pid=559)[0m 
[2m[36m(pid=559)[0m ======================End of Report==========================
[2m[36m(pid=553)[0m 
[2m[36m(pid=553)[0m =========================Options=============================
[2m[36m(pid=553)[0m -max_depth                  10000
[2m[36m(pid=553)[0m -min_bytes                  0
[2m[36m(pid=553)[0m -min_peak_bytes             0
[2m[36m(pid=553)[0m -min_residual_bytes         0
[2m[36m(pid=553)[0m -min_output_bytes           0
[2m[36m(pid=553)[0m -min_micros                 0
[2m[36m(pid=553)[0m -min_accelerator_micros     0
[2m[36m(pid=553)[0m -min_cpu_micros             0
[2m[36m(pid=553)[0m -min_params                 0
[2m[36m(pid=553)[0m -min_float_ops              1
[2m[36m(pid=553)[0m -min_occurrence             0
[2m[36m(pid=553)[0m -step                       -1
[2m[36m(pid=553)[0m -order_by                   float_ops
[2m[36m(pid=553)[0m -account_type_regexes       .*
[2m[36m(pid=553)[0m -start_name_regexes         .*
[2m[36m(pid=553)[0m -trim_name_regexes          
[2m[36m(pid=553)[0m -show_name_regexes          .*
[2m[36m(pid=553)[0m -hide_name_regexes          
[2m[36m(pid=553)[0m -account_displayed_op_only  true
[2m[36m(pid=553)[0m -select                     float_ops
[2m[36m(pid=553)[0m -output                     stdout:
[2m[36m(pid=553)[0m 
[2m[36m(pid=553)[0m ==================Model Analysis Report======================
[2m[36m(pid=553)[0m 
[2m[36m(pid=553)[0m Doc:
[2m[36m(pid=553)[0m scope: The nodes in the model graph are organized by their names, which is hierarchical like filesystem.
[2m[36m(pid=553)[0m flops: Number of float operations. Note: Please read the implementation for the math behind it.
[2m[36m(pid=553)[0m 
[2m[36m(pid=553)[0m Profile:
[2m[36m(pid=553)[0m node name | # float_ops
[2m[36m(pid=553)[0m _TFProfRoot (--/13.20m flops)
[2m[36m(pid=553)[0m   dense/kernel/Initializer/random_uniform (6.42m/12.85m flops)
[2m[36m(pid=553)[0m     dense/kernel/Initializer/random_uniform/mul (6.42m/6.42m flops)
[2m[36m(pid=553)[0m     dense/kernel/Initializer/random_uniform/sub (1/1 flops)
[2m[36m(pid=553)[0m   dense_1/kernel/Initializer/random_uniform (126.98k/253.95k flops)
[2m[36m(pid=553)[0m     dense_1/kernel/Initializer/random_uniform/mul (126.98k/126.98k flops)
[2m[36m(pid=553)[0m     dense_1/kernel/Initializer/random_uniform/sub (1/1 flops)
[2m[36m(pid=553)[0m   conv2d_1/kernel/Initializer/random_uniform (51.20k/102.40k flops)
[2m[36m(pid=553)[0m     conv2d_1/kernel/Initializer/random_uniform/mul (51.20k/51.20k flops)
[2m[36m(pid=553)[0m     conv2d_1/kernel/Initializer/random_uniform/sub (1/1 flops)
[2m[36m(pid=553)[0m   conv2d/kernel/Initializer/random_uniform (800/1.60k flops)
[2m[36m(pid=553)[0m     conv2d/kernel/Initializer/random_uniform/mul (800/800 flops)
[2m[36m(pid=553)[0m     conv2d/kernel/Initializer/random_uniform/sub (1/1 flops)
[2m[36m(pid=553)[0m   gradients/sparse_softmax_cross_entropy_loss/value_grad/Neg (1/1 flops)
[2m[36m(pid=553)[0m   gradients/sparse_softmax_cross_entropy_loss/value_grad/mul (1/1 flops)
[2m[36m(pid=553)[0m   sparse_softmax_cross_entropy_loss/num_present/Equal (1/1 flops)
[2m[36m(pid=553)[0m 
[2m[36m(pid=553)[0m ======================End of Report==========================
train_accuracy: 0.00363116, 10th percentile: 0, 50th percentile: 0.00352117, 90th percentile 0.00712766
train_loss: 4.12044, 10th percentile: 4.11509, 50th percentile: 4.11973, 90th percentile 4.12671
test_accuracy: 0.00392145, 10th percentile: 0, 50th percentile: 0, 90th percentile 0
test_loss: 4.11996, 10th percentile: 4.09628, 50th percentile: 4.12079, 90th percentile 4.14429
--- Round 1 of 8: Training 2 Clients ---
train_accuracy: 0.0541996, 10th percentile: 0.0280311, 50th percentile: 0.0672109, 90th percentile 0.0903297
train_loss: 3.84061, 10th percentile: 3.74282, 50th percentile: 3.7984, 90th percentile 3.91425
test_accuracy: 0.0532278, 10th percentile: 0, 50th percentile: 0.0555556, 90th percentile 0.122794
test_loss: 3.84835, 10th percentile: 3.68865, 50th percentile: 3.8443, 90th percentile 3.97366
--- Round 2 of 8: Training 2 Clients ---
